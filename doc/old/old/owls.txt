Optimizing Implosion with Lot Sizes

Ordinarily, optimizing implosion does not respect the lot size constraints
specified by the minLotSize and incLotSize attributes. These contraints cannot
be modeled by Linear Programming (LP), so by default, optimizing implosion
ignores them, but this behavior can be overridden. To have optimizing implosion
respect lot sizes, set the global attribute "optWithLotSizes" to TRUE. When
optWithLotSizes is TRUE, optimizing implosion uses a Mixed Intger Programming
(MIP) formulation instead of of an LP formulation and the resulting solution
will respect the lot size attributes, minLotSize and incLotSize.

A word of warning: When using this feature, please note that it can take
drastically more CPU time to solve a MIP problem than to solve the corresponding
LP problem. An implosion problem that solves in seconds using optimizing
implosion without lot sizes can easily cause WIT to run for many hours (or
worse), when optimizing implosion with lot sizes is being used. Thus in many
cases, this feature will not actually be useful.

When optimizing implosion with lot sizes is being used, the following
restrictions apply:

* For each operation, the incLotSize attribute must have an integer value in all
  periods.

* For each operation and each period, t, the ratio
  minLotSize[t] / incLotSize[t] must be an integer.

* For each operation, the twoLevelLotSizes attribute must be FALSE.

* The global attribute computeCriticalList must be FALSE.

* The global attribute compPrices must be FALSE.

* The global attribute accAfterOptImp must be FALSE.


Global Attribute optWithLotSizes:
   Input
   Boolean
   Default value: FALSE
   If TRUE, optimizing implosion will respect lot sizes.
