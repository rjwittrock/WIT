IBM CONFIDENTIAL
--- ------------

Solution Description of the "chal2" WIT Data Set
------------------------------------------------

by Bob Wittrock
5/30/95

Please read problem.txt before reading this document. Also, if you
intend to volunteer as a test contestant for the WIT Challenge, you should
not read this document.

This problem has only one optimal solution. For readers not versed in Linear
Programming theory, there's a well-known theorem that tells how to determine
that an optimal solution to an LP is unique, and this theorem was applied.

The idea of this problem and its solution is that when people try to solve
implosion problems by hand, they are likely to use "greedy" methods. This
problem has been constructed so that a smart greedy approach will be able
to get part of the optimal solution but not the rest, so that the greedy
approach is a false path or red herring.

So, suppose the contestant has the insight to know (or luck to guess) that
the demand for Final4 should met greedily. He/she would be right. This means
meeting as much demand as possible, stopping only when forced to by a
constraint. The contraints on Final4 are as follows:

* Supply of Raw1, used via Assem3.
* Supply of Raw2, used via Assem3.
* Supply of Raw3, used directly or via the substitute off Assem3.
* LaborHour in period 0.
* LaborHour in period 2.
* The demand volume itself.

As it happens, the gating constraint is the supply of Raw3, used directly only.
So the the optimal solution produces the amount of Final4 that uses up the
supply of Raw3 without using the substitute that uses Raw3.

If the contestant does this greedy allocation, he/she can then simplify the
problem by removing Final4 and Raw3. This also implies that the substitute
that uses Raw3 is eliminated. Also, since Final3 has a BOM entry to Raw3,
without substitutes, it is eliminated.

Of the 7 independent variables in the problem, only 4 are now left: the
period 2 prodVol for Final1, Final2, and Final5 and the period 2 prodvol for
the substitute off Final5. Actually, it's more inituitive to replace the last
two variables with the following two: prodVol of Final5 without substitution
and prodVol of Final5 with substitution. Eight constraints remain: The supply
of Raw1 and Raw2 in period 0, the supply LaborHour in all 3 periods, and
the demand for Final1, Final2, and Final3. As it turns out, the gating
constraints are: The supply of Raw1 and Raw2, and the supply LaborHour in
periods 0 and 1. Suppose the contestant figures this much out. This is where
the greedy approach breaks down: Each of the 4 remaining prodVols uses each
of these 4 resources (but in different proportions). If you set any of these
4 prodVols based on a greedy approach, you will end up using up one of these
constraining resources, which would prevent each of the other 3 prodVols
from being positive, let alone optimal. This would also have the effect of
only using up one of the 4 gating reseources. In contrast, the optimal
solution makes trade-offs between these 4 prodVols, setting them to just the
right level to use up all 4 of the gating resources. This trade-off level is
determined as the solution to a dense system of 4 linear equations and 4
unknowns, namely the linear system that asserts that the 4 gating resources
are used up by the 4 prodVols.

So the ultimate reason that this problem is hard is that it requires
solving a 4 by 4 linear system. I imagine many contestants would not
get far enough to realize that this (or more generally, the need to
solve a linear system) is the fundamental problem, but even if they do,
they will presumably be stuck.

By the way, the fact that the optimal solution is found as the solution
to a system of linear equations is no numerical coincidence. This is
a fundamental property of linear programming problems. This in turn
is the reason why we can be sure that greedy heuristics will not
be able to solve general implosion problems optimally (although it
doesn't keep heuristics from being close.)

The following table lists the parts and substitutes in terms of their
relationship to the structure of the optimal solution:


LaborHour / period 0     Used-up by trade-offs
LaborHour / period 1     Used-up by trade-offs
LaborHour / period 2     Excess
Raw1                     Used-up by trade-offs
Raw2                     Used-up by trade-offs
Raw3                     Used-up by Final4
Assemble1                Just-In-Time
Assemble2                Just-In-Time
Assemble3                Just-In-Time
Final1                   Trade-off
Final2                   Trade-off
Final3                   Eliminated by Final4
Final4                   Greedy
Final5 w/o substitution  Trade-off

Substitute R3->R2->A3    Eliminated by Final4
Substitute A3->A2->F5    Trade-off
